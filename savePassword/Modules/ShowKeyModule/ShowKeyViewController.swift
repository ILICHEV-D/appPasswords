//
//  ShowKeyViewController.swift
//  savePassword
//
//  Created Danil Ilichev on 12.01.2021.
//  Copyright Â© 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class ShowKeyViewController: UIViewController, ShowKeyViewProtocol {

	var presenter: ShowKeyPresenterProtocol
    
    var titleLabel = UILabel()
    
    var stackKey = UIStackView()
    



    init(presenter: ShowKeyPresenterProtocol, appDepedency: AppDependency) {
        self.presenter = presenter
        self.presenter.appDepedency = appDepedency
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func loadView() {
        let view = UIView()
        self.view = view
        
        view.backgroundColor = .white
    }

	override func viewDidLoad() {
        super.viewDidLoad()

        presenter.view = self
        presenter.viewDidLoad()
    }
    
    func addAll(){
        titleLabel.text = Localization.Setting.key
        titleLabel.textColor = .black
        view.addSubview(titleLabel)
        view.addSubview(stackKey)
        stackKey.axis = .vertical
        let key = presenter.appDepedency?.cryptService.getKey()
        
        
        
        for i in 0...3 {
            let keyLable = UILabel()
            keyLable.textColor = .gray
            keyLable.translatesAutoresizingMaskIntoConstraints = false
            keyLable.text = String((key?[i])!)
            stackKey.addArrangedSubview(keyLable)
        }
    }

    func setupConstraints(){
        titleLabel.translatesAutoresizingMaskIntoConstraints = false
        stackKey.translatesAutoresizingMaskIntoConstraints = false
        
        [
            titleLabel.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
            titleLabel.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            
            
            stackKey.topAnchor.constraint(equalTo: titleLabel.bottomAnchor, constant: 40),
            stackKey.widthAnchor.constraint(equalToConstant: 200),
            stackKey.heightAnchor.constraint(equalToConstant: 200),
            stackKey.centerXAnchor.constraint(equalTo: view.centerXAnchor),

            
        ].forEach({$0.isActive = true})

    }

}
